// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace RPPP_WebApp.Models
{
    public partial class RPPP02Context : DbContext
    {
        public RPPP02Context()
        {
        }

        public RPPP02Context(DbContextOptions<RPPP02Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Funkcije> Funkcije { get; set; }
        public virtual DbSet<Informacija> Informacija { get; set; }
        public virtual DbSet<IzbioKvar> IzbioKvar { get; set; }
        public virtual DbSet<IzdajePrirucnik> IzdajePrirucnik { get; set; }
        public virtual DbSet<Kontrolor> Kontrolor { get; set; }
        public virtual DbSet<KrajSmjene> KrajSmjene { get; set; }
        public virtual DbSet<Kriticnost> Kriticnost { get; set; }
        public virtual DbSet<Kvar> Kvar { get; set; }
        public virtual DbSet<Lokacija> Lokacija { get; set; }
        public virtual DbSet<NadleznoTijelo> NadleznoTijelo { get; set; }
        public virtual DbSet<NadzirePodsustav> NadzirePodsustav { get; set; }
        public virtual DbSet<NoviKvar> NoviKvar { get; set; }
        public virtual DbSet<Oprema> Oprema { get; set; }
        public virtual DbSet<PlanOdrzavanja> PlanOdrzavanja { get; set; }
        public virtual DbSet<PlaniranZa> PlaniranZa { get; set; }
        public virtual DbSet<PodrucjeRada> PodrucjeRada { get; set; }
        public virtual DbSet<Podsustav> Podsustav { get; set; }
        public virtual DbSet<PrimaInformaciju> PrimaInformaciju { get; set; }
        public virtual DbSet<Prioritet> Prioritet { get; set; }
        public virtual DbSet<Prirucnik> Prirucnik { get; set; }
        public virtual DbSet<RadniList> RadniList { get; set; }
        public virtual DbSet<RadniNalog> RadniNalog { get; set; }
        public virtual DbSet<Radnik> Radnik { get; set; }
        public virtual DbSet<Rang> Rang { get; set; }
        public virtual DbSet<Smjena> Smjena { get; set; }
        public virtual DbSet<Stanje> Stanje { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Stavka> Stavka { get; set; }
        public virtual DbSet<StrucnaSprema> StrucnaSprema { get; set; }
        public virtual DbSet<Sustav> Sustav { get; set; }
        public virtual DbSet<SystemLogging> SystemLogging { get; set; }
        public virtual DbSet<TimZaOdrzavanje> TimZaOdrzavanje { get; set; }
        public virtual DbSet<TipOpreme> TipOpreme { get; set; }
        public virtual DbSet<UnosiSeKvar> UnosiSeKvar { get; set; }
        public virtual DbSet<Uredaj> Uredaj { get; set; }
        public virtual DbSet<VoditeljSmjene> VoditeljSmjene { get; set; }
        public virtual DbSet<VrstaSustava> VrstaSustava { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Latin1_General_CI_AS");

            modelBuilder.Entity<Funkcije>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.IdPodsustav })
                    .HasName("PK__Funkcije__97B20407F128AFC7");

                entity.HasIndex(e => e.Naziv, "UQ__Funkcije__603E81464C00BB3F")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IdPodsustav).HasColumnName("ID_Podsustav");

                entity.Property(e => e.Kategorija)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPodsustavNavigation)
                    .WithMany(p => p.Funkcije)
                    .HasForeignKey(d => d.IdPodsustav)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Funkcije__ID_Pod__6EF57B66");
            });

            modelBuilder.Entity<Informacija>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DatumSlanja)
                    .HasColumnType("date")
                    .HasColumnName("Datum_slanja");

                entity.Property(e => e.IdUredaj).HasColumnName("ID_Uredaj");

                entity.Property(e => e.Poruka)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdUredajNavigation)
                    .WithMany(p => p.Informacija)
                    .HasForeignKey(d => d.IdUredaj)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Informaci__ID_Ur__6FE99F9F");
            });

            modelBuilder.Entity<IzbioKvar>(entity =>
            {
                entity.HasKey(e => new { e.IdUredaj, e.IdKvar })
                    .HasName("PK__IzbioKva__FBECDC080C642125");

                entity.Property(e => e.IdUredaj).HasColumnName("ID_Uredaj");

                entity.Property(e => e.IdKvar).HasColumnName("ID_Kvar");

                entity.HasOne(d => d.IdKvarNavigation)
                    .WithMany(p => p.IzbioKvar)
                    .HasForeignKey(d => d.IdKvar)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IzbioKvar__ID_Kv__70DDC3D8");

                entity.HasOne(d => d.IdUredajNavigation)
                    .WithMany(p => p.IzbioKvar)
                    .HasForeignKey(d => d.IdUredaj)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IzbioKvar__ID_Ur__71D1E811");
            });

            modelBuilder.Entity<IzdajePrirucnik>(entity =>
            {
                entity.HasKey(e => new { e.IdNadleznoTijelo, e.IdPrirucnik })
                    .HasName("PK__IzdajePr__09E3C56A5F4E2A41");

                entity.Property(e => e.IdNadleznoTijelo).HasColumnName("ID_NadleznoTijelo");

                entity.Property(e => e.IdPrirucnik).HasColumnName("ID_Prirucnik");

                entity.HasOne(d => d.IdNadleznoTijeloNavigation)
                    .WithMany(p => p.IzdajePrirucnik)
                    .HasForeignKey(d => d.IdNadleznoTijelo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IzdajePri__ID_Na__72C60C4A");

                entity.HasOne(d => d.IdPrirucnikNavigation)
                    .WithMany(p => p.IzdajePrirucnik)
                    .HasForeignKey(d => d.IdPrirucnik)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__IzdajePri__ID_Pr__73BA3083");
            });

            modelBuilder.Entity<Kontrolor>(entity =>
            {
                entity.HasIndex(e => e.KorisnickoIme, "UQ__Kontrolo__5F72E4489D6452A7")
                    .IsUnique();

                entity.HasIndex(e => e.Oib, "UQ__Kontrolo__CB394B3E293EB7DD")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DatumZaposlenja)
                    .HasColumnType("date")
                    .HasColumnName("Datum_zaposlenja");

                entity.Property(e => e.IdRang).HasColumnName("ID_Rang");

                entity.Property(e => e.IdSmjena).HasColumnName("ID_Smjena");

                entity.Property(e => e.Ime)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KorisnickoIme)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Korisnicko_ime");

                entity.Property(e => e.Lozinka)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Oib)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("OIB")
                    .IsFixedLength(true);

                entity.Property(e => e.Prezime)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ZaposlenDo)
                    .HasColumnType("date")
                    .HasColumnName("Zaposlen_do");

                entity.HasOne(d => d.IdRangNavigation)
                    .WithMany(p => p.Kontrolor)
                    .HasForeignKey(d => d.IdRang)
                    .HasConstraintName("FK__Kontrolor__ID_Ra__754E3E91");

                entity.HasOne(d => d.IdSmjenaNavigation)
                    .WithMany(p => p.Kontrolor)
                    .HasForeignKey(d => d.IdSmjena)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Kontrolor__ID_Sm__75A278F5");
            });

            modelBuilder.Entity<KrajSmjene>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.VrijemeKrajaSmjene)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("Vrijeme_kraja_smjene")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Kriticnost>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.StupanjKriticnosti)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Stupanj_kriticnosti");
            });

            modelBuilder.Entity<Kvar>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdPrirucnik).HasColumnName("ID_Prirucnik");

                entity.Property(e => e.Opis)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Tip)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPrirucnikNavigation)
                    .WithMany(p => p.Kvar)
                    .HasForeignKey(d => d.IdPrirucnik)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Kvar__ID_Prirucn__76969D2E");
            });

            modelBuilder.Entity<Lokacija>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.KontaktTelefon)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Kontakt_telefon");

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PostanskiBroj)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("Postanski_broj")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<NadleznoTijelo>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Tip)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<NadzirePodsustav>(entity =>
            {
                entity.HasKey(e => new { e.IdPodsustav, e.IdKontrolor })
                    .HasName("PK__NadzireP__5A89DDB754BE54D1");

                entity.Property(e => e.IdPodsustav).HasColumnName("ID_Podsustav");

                entity.Property(e => e.IdKontrolor).HasColumnName("ID_Kontrolor");

                entity.HasOne(d => d.IdKontrolorNavigation)
                    .WithMany(p => p.NadzirePodsustav)
                    .HasForeignKey(d => d.IdKontrolor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__NadzirePo__ID_Ko__778AC167");

                entity.HasOne(d => d.IdPodsustavNavigation)
                    .WithMany(p => p.NadzirePodsustav)
                    .HasForeignKey(d => d.IdPodsustav)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__NadzirePo__ID_Po__787EE5A0");
            });

            modelBuilder.Entity<NoviKvar>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Opis)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PostupakRjesavanja)
                    .IsRequired()
                    .HasMaxLength(1862)
                    .IsUnicode(false)
                    .HasColumnName("Postupak_rjesavanja");

                entity.Property(e => e.Tip)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Oprema>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DatumPustanjaUPogon)
                    .HasColumnType("date")
                    .HasColumnName("Datum_pustanja_u_pogon");

                entity.Property(e => e.IdPodsustav).HasColumnName("ID_Podsustav");

                entity.Property(e => e.IdTipOpreme).HasColumnName("ID_TipOpreme");

                entity.HasOne(d => d.IdPodsustavNavigation)
                    .WithMany(p => p.Oprema)
                    .HasForeignKey(d => d.IdPodsustav)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Oprema__ID_Podsu__797309D9");

                entity.HasOne(d => d.IdTipOpremeNavigation)
                    .WithMany(p => p.Oprema)
                    .HasForeignKey(d => d.IdTipOpreme)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Oprema__ID_TipOp__7A672E12");
            });

            modelBuilder.Entity<PlanOdrzavanja>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DatumOdrzavanja)
                    .HasColumnType("date")
                    .HasColumnName("Datum_odrzavanja");

                entity.Property(e => e.IdPodsustav).HasColumnName("ID_Podsustav");

                entity.Property(e => e.IdTimZaOdrzavanje).HasColumnName("ID_TimZaOdrzavanje");

                entity.Property(e => e.RazinaStrucnosti).HasColumnName("Razina_strucnosti");

                entity.HasOne(d => d.IdPodsustavNavigation)
                    .WithMany(p => p.PlanOdrzavanja)
                    .HasForeignKey(d => d.IdPodsustav)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PlanOdrza__ID_Po__7D439ABD");

                entity.HasOne(d => d.IdTimZaOdrzavanjeNavigation)
                    .WithMany(p => p.PlanOdrzavanja)
                    .HasForeignKey(d => d.IdTimZaOdrzavanje)
                    .HasConstraintName("FK__PlanOdrza__ID_Ti__6517D6C8");
            });

            modelBuilder.Entity<PlaniranZa>(entity =>
            {
                entity.HasKey(e => new { e.IdLokacija, e.IdPlanOdrzavanja })
                    .HasName("PK__Planiran__AAFB85912B051EA4");

                entity.Property(e => e.IdLokacija).HasColumnName("ID_Lokacija");

                entity.Property(e => e.IdPlanOdrzavanja).HasColumnName("ID_PlanOdrzavanja");

                entity.HasOne(d => d.IdLokacijaNavigation)
                    .WithMany(p => p.PlaniranZa)
                    .HasForeignKey(d => d.IdLokacija)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PlaniranZ__ID_Lo__7B5B524B");

                entity.HasOne(d => d.IdPlanOdrzavanjaNavigation)
                    .WithMany(p => p.PlaniranZa)
                    .HasForeignKey(d => d.IdPlanOdrzavanja)
                    .HasConstraintName("FK__PlaniranZ__ID_Pl__04908221");
            });

            modelBuilder.Entity<PodrucjeRada>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.VrstaPodrucjaRada)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Vrsta_podrucja_rada");
            });

            modelBuilder.Entity<Podsustav>(entity =>
            {
                entity.HasIndex(e => e.Naziv, "UQ__Podsusta__603E81462C83AC99")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdKriticnost).HasColumnName("ID_Kriticnost");

                entity.Property(e => e.IdLokacija).HasColumnName("ID_Lokacija");

                entity.Property(e => e.IdSustav).HasColumnName("ID_Sustav");

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Opis)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.UcestalostOdrzavanja).HasColumnName("Ucestalost_odrzavanja");

                entity.HasOne(d => d.IdKriticnostNavigation)
                    .WithMany(p => p.Podsustav)
                    .HasForeignKey(d => d.IdKriticnost)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Podsustav__ID_Kr__7F2BE32F");

                entity.HasOne(d => d.IdLokacijaNavigation)
                    .WithMany(p => p.Podsustav)
                    .HasForeignKey(d => d.IdLokacija)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Podsustav__ID_Lo__00200768");

                entity.HasOne(d => d.IdSustavNavigation)
                    .WithMany(p => p.Podsustav)
                    .HasForeignKey(d => d.IdSustav)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Podsustav__ID_Su__01142BA1");
            });

            modelBuilder.Entity<PrimaInformaciju>(entity =>
            {
                entity.HasKey(e => new { e.IdKontrolor, e.IdInformacija })
                    .HasName("PK__PrimaInf__768D6232E7B41C97");

                entity.Property(e => e.IdKontrolor).HasColumnName("ID_Kontrolor");

                entity.Property(e => e.IdInformacija).HasColumnName("ID_Informacija");

                entity.HasOne(d => d.IdInformacijaNavigation)
                    .WithMany(p => p.PrimaInformaciju)
                    .HasForeignKey(d => d.IdInformacija)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PrimaInfo__ID_In__02084FDA");

                entity.HasOne(d => d.IdKontrolorNavigation)
                    .WithMany(p => p.PrimaInformaciju)
                    .HasForeignKey(d => d.IdKontrolor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PrimaInfo__ID_Ko__02FC7413");
            });

            modelBuilder.Entity<Prioritet>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.StupanjPrioriteta)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Stupanj_prioriteta");
            });

            modelBuilder.Entity<Prirucnik>(entity =>
            {
                entity.HasIndex(e => e.Izdavac, "UQ__Prirucni__300A414D5EA28259")
                    .IsUnique();

                entity.HasIndex(e => e.Naziv, "UQ__Prirucni__603E81463708F574")
                    .IsUnique();

                entity.HasIndex(e => e.Verzija, "UQ__Prirucni__F24BE619188A3131")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Datum).HasColumnType("date");

                entity.Property(e => e.IdUredaj).HasColumnName("ID_Uredaj");

                entity.Property(e => e.Izdavac)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdUredajNavigation)
                    .WithMany(p => p.Prirucnik)
                    .HasForeignKey(d => d.IdUredaj)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Prirucnik__ID_Ur__03F0984C");
            });

            modelBuilder.Entity<RadniList>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdRadniNalog).HasColumnName("ID_RadniNalog");

                entity.Property(e => e.IdStatus).HasColumnName("ID_Status");

                entity.Property(e => e.IdTimZaOdrzavanje).HasColumnName("ID_TimZaOdrzavanje");

                entity.Property(e => e.IdUredaj).HasColumnName("ID_Uredaj");

                entity.Property(e => e.OpisRada)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Opis_rada");

                entity.Property(e => e.PocetakRada)
                    .HasColumnType("date")
                    .HasColumnName("Pocetak_rada");

                entity.Property(e => e.TrajanjeRada).HasColumnName("Trajanje_rada");

                entity.HasOne(d => d.IdRadniNalogNavigation)
                    .WithMany(p => p.RadniList)
                    .HasForeignKey(d => d.IdRadniNalog)
                    .HasConstraintName("FK__RadniList__ID_Ra__24092D7A");

                entity.HasOne(d => d.IdStatusNavigation)
                    .WithMany(p => p.RadniList)
                    .HasForeignKey(d => d.IdStatus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RadniList__ID_St__07C12930");

                entity.HasOne(d => d.IdTimZaOdrzavanjeNavigation)
                    .WithMany(p => p.RadniList)
                    .HasForeignKey(d => d.IdTimZaOdrzavanje)
                    .HasConstraintName("FK__RadniList__ID_Ti__23150941");

                entity.HasOne(d => d.IdUredajNavigation)
                    .WithMany(p => p.RadniList)
                    .HasForeignKey(d => d.IdUredaj)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RadniList__ID_Ur__09A971A2");
            });

            modelBuilder.Entity<RadniNalog>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdKontrolor).HasColumnName("ID_Kontrolor");

                entity.Property(e => e.IdKvar).HasColumnName("ID_Kvar");

                entity.Property(e => e.IdLokacija).HasColumnName("ID_Lokacija");

                entity.Property(e => e.IdStatus).HasColumnName("ID_Status");

                entity.Property(e => e.IdStupanjPrioriteta).HasColumnName("ID_StupanjPrioriteta");

                entity.Property(e => e.IdVoditeljSmjene).HasColumnName("ID_VoditeljSmjene");

                entity.Property(e => e.PocetakRada)
                    .HasColumnType("date")
                    .HasColumnName("Pocetak_rada");

                entity.Property(e => e.Sla)
                    .HasColumnType("date")
                    .HasColumnName("SLA");

                entity.Property(e => e.TipRada)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Tip_rada");

                entity.Property(e => e.TragKvara)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Trag_Kvara");

                entity.HasOne(d => d.IdKontrolorNavigation)
                    .WithMany(p => p.RadniNalog)
                    .HasForeignKey(d => d.IdKontrolor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RadniNalo__ID_Ko__0A9D95DB");

                entity.HasOne(d => d.IdKvarNavigation)
                    .WithMany(p => p.RadniNalog)
                    .HasForeignKey(d => d.IdKvar)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RadniNalo__ID_Kv__0B91BA14");

                entity.HasOne(d => d.IdLokacijaNavigation)
                    .WithMany(p => p.RadniNalog)
                    .HasForeignKey(d => d.IdLokacija)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RadniNalo__ID_Lo__0C85DE4D");

                entity.HasOne(d => d.IdStatusNavigation)
                    .WithMany(p => p.RadniNalog)
                    .HasForeignKey(d => d.IdStatus)
                    .HasConstraintName("FK__RadniNalo__ID_St__1E505424");

                entity.HasOne(d => d.IdStupanjPrioritetaNavigation)
                    .WithMany(p => p.RadniNalog)
                    .HasForeignKey(d => d.IdStupanjPrioriteta)
                    .HasConstraintName("FK__RadniNalo__ID_St__1F44785D");

                entity.HasOne(d => d.IdVoditeljSmjeneNavigation)
                    .WithMany(p => p.RadniNalog)
                    .HasForeignKey(d => d.IdVoditeljSmjene)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RadniNalo__ID_Vo__0F624AF8");
            });

            modelBuilder.Entity<Radnik>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Certifikat)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IdStrucnaSprema).HasColumnName("ID_StrucnaSprema");

                entity.Property(e => e.IdTimZaOdrzavanje).HasColumnName("ID_TimZaOdrzavanje");

                entity.Property(e => e.Ime)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IstekCertifikata)
                    .HasColumnType("date")
                    .HasColumnName("Istek_certifikata");

                entity.Property(e => e.Prezime)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdStrucnaSpremaNavigation)
                    .WithMany(p => p.Radnik)
                    .HasForeignKey(d => d.IdStrucnaSprema)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Radnik__ID_Struc__04E4BC85");

                entity.HasOne(d => d.IdTimZaOdrzavanjeNavigation)
                    .WithMany(p => p.Radnik)
                    .HasForeignKey(d => d.IdTimZaOdrzavanje)
                    .HasConstraintName("FK__Radnik__ID_TimZa__59A6241C");
            });

            modelBuilder.Entity<Rang>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ImeRanga)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Ime_ranga");
            });

            modelBuilder.Entity<Smjena>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdKrajSmjene).HasColumnName("ID_KrajSmjene");

                entity.Property(e => e.PlatniFaktor).HasColumnName("Platni_faktor");

                entity.Property(e => e.PocetakSmjene)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("Pocetak_smjene")
                    .IsFixedLength(true);

                entity.HasOne(d => d.IdKrajSmjeneNavigation)
                    .WithMany(p => p.Smjena)
                    .HasForeignKey(d => d.IdKrajSmjene)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Smjena__ID_KrajS__10566F31");
            });

            modelBuilder.Entity<Stanje>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.TipStanja)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Tip_stanja");
            });

            modelBuilder.Entity<Status>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.NazivStatusa)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Naziv_statusa");
            });

            modelBuilder.Entity<Stavka>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdPrirucnik).HasColumnName("ID_Prirucnik");

                entity.Property(e => e.Koraci)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Namjena)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPrirucnikNavigation)
                    .WithMany(p => p.Stavka)
                    .HasForeignKey(d => d.IdPrirucnik)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Stavka__ID_Priru__114A936A");
            });

            modelBuilder.Entity<StrucnaSprema>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.RazinaStrucneSpreme)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Razina_strucne_spreme");
            });

            modelBuilder.Entity<Sustav>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdKriticnost).HasColumnName("ID_Kriticnost");

                entity.Property(e => e.IdVrstaSustava).HasColumnName("ID_VrstaSustava");

                entity.Property(e => e.Opis)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdKriticnostNavigation)
                    .WithMany(p => p.Sustav)
                    .HasForeignKey(d => d.IdKriticnost)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Sustav__ID_Kriti__123EB7A3");

                entity.HasOne(d => d.IdVrstaSustavaNavigation)
                    .WithMany(p => p.Sustav)
                    .HasForeignKey(d => d.IdVrstaSustava)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Sustav__ID_Vrsta__1332DBDC");
            });

            modelBuilder.Entity<SystemLogging>(entity =>
            {
                entity.HasKey(e => e.SystemLoggingGuid);

                entity.ToTable("system_logging");

                entity.Property(e => e.SystemLoggingGuid)
                    .HasColumnName("system_logging_guid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.EnteredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("entered_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LogApplication)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("log_application");

                entity.Property(e => e.LogCallSite)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("log_call_site");

                entity.Property(e => e.LogDate)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("log_date");

                entity.Property(e => e.LogException)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("log_exception");

                entity.Property(e => e.LogLevel)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("log_level");

                entity.Property(e => e.LogLogger)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("log_logger");

                entity.Property(e => e.LogMachineName)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("log_machine_name");

                entity.Property(e => e.LogMessage)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("log_message");

                entity.Property(e => e.LogStacktrace)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("log_stacktrace");

                entity.Property(e => e.LogThread)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("log_thread");

                entity.Property(e => e.LogUserName)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("log_user_name");
            });

            modelBuilder.Entity<TimZaOdrzavanje>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DatumOsnivanja)
                    .HasColumnType("date")
                    .HasColumnName("Datum_osnivanja");

                entity.Property(e => e.IdPodrucjeRada).HasColumnName("ID_PodrucjeRada");

                entity.Property(e => e.NazivTima)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Naziv_tima");

                entity.HasOne(d => d.IdPodrucjeRadaNavigation)
                    .WithMany(p => p.TimZaOdrzavanje)
                    .HasForeignKey(d => d.IdPodrucjeRada)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TimZaOdrz__ID_Po__14270015");
            });

            modelBuilder.Entity<TipOpreme>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.TipOpreme1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Tip_opreme");
            });

            modelBuilder.Entity<UnosiSeKvar>(entity =>
            {
                entity.HasKey(e => new { e.IdPrirucnik, e.IdNoviKvar })
                    .HasName("PK__UnosiSeK__22138427A9498D27");

                entity.Property(e => e.IdPrirucnik).HasColumnName("ID_Prirucnik");

                entity.Property(e => e.IdNoviKvar).HasColumnName("ID_NoviKvar");

                entity.HasOne(d => d.IdNoviKvarNavigation)
                    .WithMany(p => p.UnosiSeKvar)
                    .HasForeignKey(d => d.IdNoviKvar)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UnosiSeKv__ID_No__151B244E");

                entity.HasOne(d => d.IdPrirucnikNavigation)
                    .WithMany(p => p.UnosiSeKvar)
                    .HasForeignKey(d => d.IdPrirucnik)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UnosiSeKv__ID_Pr__160F4887");
            });

            modelBuilder.Entity<Uredaj>(entity =>
            {
                entity.HasIndex(e => e.Naziv, "UQ__Uredaj__603E814612A53C3E")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.GodinaProizvodnje)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("Godina_proizvodnje")
                    .IsFixedLength(true);

                entity.Property(e => e.IdOprema).HasColumnName("ID_Oprema");

                entity.Property(e => e.IdStanje).HasColumnName("ID_Stanje");

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Proizvodac)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdOpremaNavigation)
                    .WithMany(p => p.Uredaj)
                    .HasForeignKey(d => d.IdOprema)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Uredaj__ID_Oprem__17036CC0");

                entity.HasOne(d => d.IdStanjeNavigation)
                    .WithMany(p => p.Uredaj)
                    .HasForeignKey(d => d.IdStanje)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Uredaj__ID_Stanj__17F790F9");
            });

            modelBuilder.Entity<VoditeljSmjene>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdSmjena).HasColumnName("ID_Smjena");

                entity.HasOne(d => d.IdSmjenaNavigation)
                    .WithMany(p => p.VoditeljSmjene)
                    .HasForeignKey(d => d.IdSmjena)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__VoditeljS__ID_Sm__18EBB532");
            });

            modelBuilder.Entity<VrstaSustava>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.NazivVrsteSustava)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Naziv_vrste_Sustava");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}