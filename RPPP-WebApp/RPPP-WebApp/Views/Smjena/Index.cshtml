@model SmjeneViewModel

<div class="container mt-3">
	<div class="jumbotron">
		<h1>Smjena</h1>
		<p>
			Na ovoj stranici je moguće pregledati kontrolore i njihove smjene ili <a asp-action="Dodaj">dodati</a> nove
		</p>
		<small>(sortiranje i straničenje na serveru, obrada iznimki, validacija, tablicni master detail, pojedinacni master detail)</small>
	</div>
</div>

<div class="container col-sm-12 col-lg-8">
	@if (@Model != null)
	{
		<table class="table table-hover" id="planTable">
			<caption>Smjena</caption>
			<thead>
				<tr>
					<th scope="col">
						<a asp-route-sort="1" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 1 ? !Model.PagingInfo.Ascending : true)">
							Pocetak smjene
						</a>
					</th>
					<th scope="col">
						<a asp-route-sort="2" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 2 ? !Model.PagingInfo.Ascending : true)">
							Platni faktor
						</a>
					</th>
					<th scope="col">
						<a asp-route-sort="3" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 3 ? !Model.PagingInfo.Ascending : true)">
							Vrijeme kraja smjene
						</a>
					</th>
					<th scope="col">
						<a asp-route-sort="4" asp-route-page="@Model.PagingInfo.CurrentPage" asp-route-ascending="@(Model.PagingInfo.Sort == 4 ? !Model.PagingInfo.Ascending : true)">
							Kontrolori
						</a>
					</th>
					<th scope="col"></th>
				</tr>
			</thead>
			<tbody>
				@foreach (SmjenaViewModel smjena in @Model.Smjene)
				{
					<tr>
						<th scope="row">@smjena.PocetakSmjene</th>
						<td>@smjena.PlatniFaktor</td>
						<td>@smjena.VrijemeKrajaSmjene</td>
						<td>
							@{
								int counter;

                                int max = smjena.Kontrolori.Count < 3 ? smjena.Kontrolori.Count : 3;

								for (counter = 0; counter < max; counter++)
								{
									if (counter < smjena.Kontrolori.Count - 1)
									{
										<span>@smjena.Kontrolori.ElementAt(counter).Ime,</span>
									}
									else
									{
										<span>@smjena.Kontrolori.ElementAt(counter).Ime </span>
									}
								}
								if (smjena.Kontrolori.Count > 3)
								{
									<span>...</span>
								}
							}
						</td>
						<td>
							<div class="btn-group" role="group" aria-label="Basic example">
								<a class="btn btn-primary btn-sm mr-2" role="button"
						   asp-action="Detalji"
						   asp-route-page="@Model.PagingInfo.CurrentPage"
						   asp-route-sort="@Model.PagingInfo.Sort"
						   asp-route-ascending="@Model.PagingInfo.Ascending"
						   asp-route-id="@smjena.Id">
									Detalji
								</a>
								<a class="btn btn-warning btn-sm mr-2" role="button"
						   asp-action="Uredi"
						   asp-route-page="@Model.PagingInfo.CurrentPage"
						   asp-route-sort="@Model.PagingInfo.Sort"
						   asp-route-ascending="@Model.PagingInfo.Ascending"
						   asp-route-id="@smjena.Id">
									Uredi
								</a>
								<form asp-action="Obrisi" method="post"
							  asp-route-page="@Model.PagingInfo.CurrentPage"
							  asp-route-sort="@Model.PagingInfo.Sort"
							  asp-route-ascending="@Model.PagingInfo.Ascending">
									<input type="hidden" name="Id" value="@smjena.Id" />
									<button type="submit" class="btn btn-sm btn-danger delete" title="Obriši">Obriši</button>
								</form>
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
		<div class="btn-group paginator" role="group" aria-label="Basic example">
			@{
				int usedLeft = Model.PagingInfo.CurrentPage - Model.PagingInfo.PageOffset > 0 ? Model.PagingInfo.PageOffset : Model.PagingInfo.CurrentPage - 1;
				int usedRight = Model.PagingInfo.PageOffset + Model.PagingInfo.CurrentPage < Model.PagingInfo.TotalPages ? Model.PagingInfo.PageOffset : Model.PagingInfo.TotalPages - Model.PagingInfo.CurrentPage;

                int start = Model.PagingInfo.CurrentPage - usedLeft - (Model.PagingInfo.PageOffset - usedRight);
                int end = Model.PagingInfo.CurrentPage + usedRight + (Model.PagingInfo.PageOffset - usedLeft);
                end = end > Model.PagingInfo.TotalPages ? Model.PagingInfo.TotalPages : end;
                start = start < 1 ? 1 : start;
                if (start >= 2)
                {
                    <a class="btn btn-outline-success btn-sm pager" asp-route-sort="@(Model.PagingInfo.Sort)" asp-route-page="1" asp-route-ascending="@(Model.PagingInfo.Ascending)" role="button">1</a>
                    @if (start > 2)
                    {
                        <a class="btn btn-outline-success btn-sm pager disabled" role="button">...</a>
                    }
                }
            }
            @for (int currentPage = start; currentPage <= end; currentPage++)
            {
                <a class="btn btn-@(currentPage == Model.PagingInfo.CurrentPage ? "": "outline-")success btn-sm pager" asp-route-sort="@(Model.PagingInfo.Sort)" asp-route-page="@currentPage" asp-route-ascending="@(Model.PagingInfo.Ascending)" role="button">@currentPage</a>
            }
            @if (end <= Model.PagingInfo.TotalPages - 1)
            {
                @if (end < Model.PagingInfo.TotalPages - 1)
                {
                    <a class="btn btn-outline-success btn-sm pager disabled" role="button">...</a>
                }
                <a class="btn btn-outline-success btn-sm pager" asp-route-sort="@(Model.PagingInfo.Sort)" asp-route-page="@Model.PagingInfo.TotalPages" asp-route-ascending="@(Model.PagingInfo.Ascending)" role="button">@Model.PagingInfo.TotalPages</a>
            }
        </div>
    }
</div>

